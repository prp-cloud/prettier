// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`issue-15785-1.js format 1`] = `
====================================options=====================================
parsers: ["babel", "typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
function someFunctionName(
  someLongBreakingParameterName,
  anotherLongParameterName,
) {
  return isEqual(a?.map(([t, _]) => t?.id), b?.map(([t, _]) => t?.id));
  return isEqual(a.map(([t, _]) => t?.id), b.map(([t, _]) => t?.id));
}


=====================================output=====================================
function someFunctionName(
  someLongBreakingParameterName,
  anotherLongParameterName,
) {
  return isEqual(
    a?.map(([t, _]) => t?.id),
    b?.map(([t, _]) => t?.id),
  );
  return isEqual(
    a.map(([t, _]) => t?.id),
    b.map(([t, _]) => t?.id),
  );
}

================================================================================
`;

exports[`issue-15785-2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const theValue = Object.entries(someLongObjectName).filter(
  ([listingId]) => someListToCompareToHere?.includes(listingId),
);
const theValue2 = Object.entries(someLongObjectName).filter(
  ([listingId]) => someListToCompareToHere.includes(listingId),
);

=====================================output=====================================
const theValue = Object.entries(someLongObjectName).filter(([listingId]) =>
  someListToCompareToHere?.includes(listingId),
);
const theValue2 = Object.entries(someLongObjectName).filter(([listingId]) =>
  someListToCompareToHere.includes(listingId),
);

================================================================================
`;

exports[`issue-15785-3.js format 1`] = `
====================================options=====================================
parsers: ["babel", "typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
logger.log(
  \`A long template string with a conditional: \${channel?.id}, and then some more content that continues until \${JSON.stringify(location)}\`
);
logger.log(
  \`A long template string with a conditional: \${channel.id}, and then some more content that continues until \${JSON.stringify(location)}\`
);

=====================================output=====================================
logger.log(
  \`A long template string with a conditional: \${channel?.id}, and then some more content that continues until \${JSON.stringify(location)}\`,
);
logger.log(
  \`A long template string with a conditional: \${channel.id}, and then some more content that continues until \${JSON.stringify(location)}\`,
);

================================================================================
`;

exports[`issue-15912.js format 1`] = `
====================================options=====================================
parsers: ["babel", "typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
test()
  .test2()
  .test2(thing?.something);

=====================================output=====================================
test().test2().test2(thing?.something);

================================================================================
`;

exports[`issue-15916.js format 1`] = `
====================================options=====================================
parsers: ["babel", "typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const randomFuncion = (value) => {
    if (value.a) {
        funcA(
            "",
            funcB(
                dayjs(value.a?.toString())
                      .add(1, "day")
                      .toISOString()
            )
        );
    }
};

=====================================output=====================================
const randomFuncion = (value) => {
  if (value.a) {
    funcA("", funcB(dayjs(value.a?.toString()).add(1, "day").toISOString()));
  }
};

================================================================================
`;

exports[`test.js format 1`] = `
====================================options=====================================
parsers: ["babel", "typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
(a?.b).c;
(a?.()).b;

(a?.b)();
(a?.())();

new (a?.b)();
new (a?.())();

=====================================output=====================================
(a?.b).c;
(a?.()).b;

(a?.b)();
(a?.())();

new (a?.b)();
new (a?.())();

================================================================================
`;

exports[`test-2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
{{{{
        const [lastCommittedX, lastCommittedY] =
          multiElement?.lastCommittedPoint ?? [0, 0];
}}}}

=====================================output=====================================
{
  {
    {
      {
        const [lastCommittedX, lastCommittedY] =
          multiElement?.lastCommittedPoint ?? [0, 0];
      }
    }
  }
}

================================================================================
`;

exports[`test-3.js format 1`] = `
====================================options=====================================
parsers: ["babel", "typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
function getLanguageByInterpreter(languages, file) {
  return languages.find((language) => language.interpreters?.includes(interpreter),
  );
  return languages.find((language) =>language.interpreters.includes(interpreter),
  );
}

=====================================output=====================================
function getLanguageByInterpreter(languages, file) {
  return languages.find((language) =>
    language.interpreters?.includes(interpreter),
  );
  return languages.find((language) =>
    language.interpreters.includes(interpreter),
  );
}

================================================================================
`;

exports[`test-4.js format 1`] = `
====================================options=====================================
parsers: ["babel", "typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// https://github.com/marmelab/react-admin/blob/8c1ddfeb4e011a94609d709c0f4f139fb5d480e8/packages/ra-data-localstorage/src/index.ts#L112
export default (params) => {
    return {
        updateMany: (resource, params) => {
            updateLocalStorage(() => {
                params.ids.forEach(id => {
                    const index = data.data.data.data.data[resource]?.findIndex(
                        record => record.id == id
                    );
                    const index2 = data.data.data.data.data[resource].findIndex(
                        record => record.id == id
                    );
                    data[resource][index] = {
                        ...data[resource][index],
                        ...params.data,
                    };
                });
            });
            return baseDataProvider.updateMany(resource, params);
        },
    }
}

=====================================output=====================================
// https://github.com/marmelab/react-admin/blob/8c1ddfeb4e011a94609d709c0f4f139fb5d480e8/packages/ra-data-localstorage/src/index.ts#L112
export default (params) => {
  return {
    updateMany: (resource, params) => {
      updateLocalStorage(() => {
        params.ids.forEach((id) => {
          const index = data.data.data.data.data[resource]?.findIndex(
            (record) => record.id == id,
          );
          const index2 = data.data.data.data.data[resource].findIndex(
            (record) => record.id == id,
          );
          data[resource][index] = {
            ...data[resource][index],
            ...params.data,
          };
        });
      });
      return baseDataProvider.updateMany(resource, params);
    },
  };
};

================================================================================
`;
